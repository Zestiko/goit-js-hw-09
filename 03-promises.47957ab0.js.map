{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,sBAC/BI,OAAQL,SAASC,cAAc,WAE3BK,EAAiB,GA0CvB,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAAUC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFI,QAAQC,IAAI,uBAAwCC,OAAfV,EAAS,QAAYU,OAANhB,EAAM,OAExDc,QAAMC,IAAI,sBAAqCC,OAAfV,EAAS,QAAYU,OAANhB,EAAM,M,GAExDA,E,IAhDPJ,EAAKO,OAAOc,iBAAiB,SA4B7B,SAAiBC,GACfA,EAAEC,iBACFL,QAAQC,IAAIX,GAEZ,IADA,IAAIJ,EAAQI,EAAeJ,MAClBoB,EAAQ,EAAGA,GAAShB,EAAeF,OAAQkB,GAAS,EAC3DpB,GAASI,EAAeH,KAC1BI,EAAce,EAAOpB,GAAOqB,MAAK,SAAAC,G,OAAUR,QAAQC,IAAIO,E,IAASC,OAAM,SAAAC,G,OAASV,QAAQC,IAAIS,E,OAjC7F5B,EAAKC,KAAKoB,iBAAiB,SAE3B,SAAiBC,GACf,IAAMO,EAAQP,EAAEQ,OAAOD,MAGD,UAAlBP,EAAEQ,OAAOC,OAEXvB,EAAeJ,MAAQ4B,OAAOH,GAE9BX,QAAQC,IAAKX,IAES,SAAlBc,EAAEQ,OAAOC,OAEbvB,EAAeH,KAAO2B,OAAOH,GAE7BX,QAAQC,IAAKX,IAEQ,WAAlBc,EAAEQ,OAAOC,OAEZvB,EAAeF,OAAS0B,OAAOH,GAE/BX,QAAQC,IAAKX,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  button: document.querySelector('button')\n}\nconst promiseOptions = {\n\n};\nrefs.button.addEventListener('click', onClick)\nrefs.form.addEventListener('input', onInput)\n\nfunction onInput(e) {\n  const value = e.target.value;\n  \n  \n  if (e.target.name === \"delay\") {\n    \n    promiseOptions.delay = Number(value);\n   \n    console.log( promiseOptions)\n  }\n    if (e.target.name === \"step\") {\n    \n    promiseOptions.step = Number(value);\n   \n    console.log( promiseOptions)\n    }\n   if (e.target.name === \"amount\") {\n    \n    promiseOptions.amount = Number(value);\n   \n    console.log( promiseOptions)\n   }\n  \n}\n\nfunction onClick(e) {\n  e.preventDefault();\n  console.log(promiseOptions)\n  let delay = promiseOptions.delay;\n  for (let index = 1; index <= promiseOptions.amount; index += 1) {\n    delay += promiseOptions.step;\n  createPromise(index, delay).then(result => console.log(result)).catch(error => console.log(error));\n  \n  };\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolver, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  \n  });\n  \n};\n\n// createPromise(1, 100).then(result => console.log(result)).catch(error => console.log(error));\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","button","$ce04d3a99e08e73b$var$promiseOptions","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolver","reject","shouldResolve","Math","random","setTimeout","console","log","concat","addEventListener","e","preventDefault","index","then","result","catch","error","value","target","name","Number"],"version":3,"file":"03-promises.47957ab0.js.map"}